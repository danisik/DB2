------------------------------
-- SMAZANI TABULEK.
------------------------------

DELETE FROM TAH;
DELETE FROM HRA;
DELETE FROM ZNACKA;
DELETE FROM OMEZENI;
DELETE FROM STAV;
DELETE FROM HRAC;

DROP TABLE TAH;
DROP TABLE HRA CASCADE;
DROP TABLE ZNACKA CASCADE;
DROP TABLE OMEZENI;
DROP TABLE STAV;
DROP TABLE HRAC;


------------------------------
-- VYTVORENI NOVYCH TABULEK.
------------------------------


CREATE TABLE OMEZENI (
	ID INTEGER NOT NULL,
	MIN_SIRKA INTEGER NOT NULL,
	MIN_VYSKA INTEGER NOT NULL,
	MIN_VELIKOST_RADY INTEGER NOT NULL,
	MAX_SIRKA INTEGER NOT NULL,
	MAX_VYSKA INTEGER NOT NULL,	
	MAX_VELIKOST_RADY INTEGER NOT NULL,
	
	PRIMARY KEY(ID) 
);

CREATE TABLE STAV (
	ID INTEGER NOT NULL,
	NAZEV VARCHAR(50),
	
	PRIMARY KEY(ID) 
);

CREATE TABLE HRAC (
	ID INTEGER NOT NULL,
	JMENO VARCHAR(255),
	TAH_PRVNI_POCET_VYHER INTEGER NOT NULL,
	TAH_PRVNI_POCET_REMIZ INTEGER NOT NULL,
	TAH_PRVNI_POCET_PROHER INTEGER NOT NULL,
	TAH_DRUHY_POCET_VYHER INTEGER NOT NULL,
	TAH_DRUHY_POCET_REMIZ INTEGER NOT NULL,
	TAH_DRUHY_POCET_PROHER INTEGER NOT NULL,
	
	PRIMARY KEY(ID) 
);

CREATE TABLE HRA (
	ID INTEGER NOT NULL,
	SIRKA INTEGER NOT NULL,
	VYSKA INTEGER NOT NULL,
	VELIKOST_RADY INTEGER NOT NULL,
	ID_STAV INTEGER NOT NULL,
	ID_PRVNI_HRAC INTEGER NOT NULL,
	CAS_PRVNI_HRAC TIMESTAMP(6) NOT NULL,
	ID_DRUHY_HRAC INTEGER NOT NULL,
	CAS_DRUHY_HRAC TIMESTAMP(6) NOT NULL,
	
	PRIMARY KEY(ID),
	FOREIGN KEY(ID_STAV) REFERENCES STAV(ID),
	FOREIGN KEY(ID_PRVNI_HRAC) REFERENCES HRAC(ID),
	FOREIGN KEY(ID_DRUHY_HRAC) REFERENCES HRAC(ID)
);

CREATE TABLE TAH (
	ID INTEGER NOT NULL,
	CAS_TAHU TIMESTAMP(6) NOT NULL,
	ID_AKTUALNI_HRA INTEGER NOT NULL,
	ID_HRAJICI_HRAC INTEGER NOT NULL,
	X INTEGER NOT NULL,
	Y INTEGER NOT NULL,
	
	PRIMARY KEY(ID),
	FOREIGN KEY(ID_AKTUALNI_HRA) REFERENCES HRA(ID),
	FOREIGN KEY(ID_HRAJICI_HRAC) REFERENCES HRAC(ID)
);

CREATE TABLE ZNACKA (
	ID INTEGER NOT NULL,
	NAZEV VARCHAR(10),
	
	PRIMARY KEY(ID)
);


------------------------------
-- ZAKLADNI DATA PRO TABULKY.
------------------------------


INSERT INTO STAV VALUES (1, 'remiza');
INSERT INTO STAV VALUES (2, 'vitezstvi zacinajiciho hrace');
INSERT INTO STAV VALUES (3, 'prohra zacinajiciho hrace');
INSERT INTO STAV VALUES (4, 'rozehrana');

INSERT INTO OMEZENI VALUES (1, 5, 5, 5, 20, 20, 15);

INSERT INTO ZNACKA VALUES (1, 'O');
INSERT INTO ZNACKA VALUES (2, 'X');
INSERT INTO ZNACKA VALUES (3, '_');


------------------------------
-- VYTVORENI POHLEDU.
------------------------------


--CREATE OR REPLACE VIEW PAPIR AS
--SELECT column1, column2, ...
--FROM table_name
--WHERE condition;


------------------------------
-- SMAZANI FUNKCI.
------------------------------


DROP FUNCTION SPATNY_PARAMETR(INTEGER, INTEGER, INTEGER);
DROP FUNCTION RADEK_PAPIRU(INTEGER, INTEGER);
DROP FUNCTION HERNI_CAS();
DROP FUNCTION REMIZA(INTEGER);
DROP FUNCTION VYHRA();

------------------------------
-- VYTVORENI FUNKCI.
------------------------------

CREATE OR REPLACE FUNCTION SPATNY_PARAMETR(POCET_RADKU INTEGER, POCET_SLOUPCU INTEGER, VELIKOST_RADY INTEGER) RETURNS INTEGER AS $$
	DECLARE		
		I_OMEZENI OMEZENI;
	BEGIN
		SELECT * INTO I_OMEZENI FROM OMEZENI;
		
		IF POCET_RADKU < I_OMEZENI.MIN_SIRKA THEN
			RETURN 1;
		END IF;
	
		IF POCET_RADKU > I_OMEZENI.MAX_SIRKA THEN
			RETURN 2;
		END IF;
	
		IF POCET_SLOUPCU < I_OMEZENI.MIN_VYSKA THEN
			RETURN 3;
		END IF;
	
		IF POCET_SLOUPCU > I_OMEZENI.MAX_VYSKA THEN
			RETURN 4;
		END IF;
	
		IF VELIKOST_RADY < I_OMEZENI.MIN_VELIKOST_RADY THEN
			RETURN 5;
		END IF;
	
		IF VELIKOST_RADY > I_OMEZENI.MAX_VELIKOST_RADY THEN
			RETURN 6;
		END IF;
	
		IF VELIKOST_RADY > POCET_RADKU THEN
			RETURN 7;
		END IF;
	
		IF VELIKOST_RADY > POCET_SLOUPCU THEN
			RETURN 8;
		END IF;
    
		RETURN 0;
	END;
	$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION RADEK_PAPIRU(ID_HRA INTEGER, RADEK_HRY INTEGER) RETURNS TEXT AS $$
	DECLARE
		I_HRA HRA;
		RADEK_PAPIRU TEXT := '';
		NAZEV_ZNACKY VARCHAR(10) := '';
		ZASTAVOVACI_PODMINKA INTEGER := 0;
		ID_HRAC_AKTUALNI INTEGER;
		ID_HRAC_PRVNI INTEGER;
	BEGIN
		SELECT * INTO I_HRA FROM HRA WHERE ID = ID_HRA;	
		SELECT ID_PRVNI_HRAC INTO ID_HRAC_PRVNI FROM HRA WHERE ID = ID_HRA;
		
		LOOP
			EXIT WHEN ZASTAVOVACI_PODMINKA = I_HRA.SIRKA;		

			SELECT ID_HRAJICI_HRAC INTO ID_HRAC_AKTUALNI FROM TAH WHERE X = ZASTAVOVACI_PODMINKA + 1 AND Y = RADEK_HRY AND ID_AKTUALNI_HRA = ID_HRA;
			
			IF ID_HRAC_AKTUALNI IS NULL THEN
				RADEK_PAPIRU := RADEK_PAPIRU || '_';
			ELSE
				IF ID_HRAC_AKTUALNI = ID_HRAC_PRVNI THEN
					RADEK_PAPIRU := RADEK_PAPIRU || 'O';
				ELSE
					RADEK_PAPIRU := RADEK_PAPIRU || 'X';
				END IF;					
			END IF;
				
			IF ZASTAVOVACI_PODMINKA < I_HRA.SIRKA THEN
				RADEK_PAPIRU := RADEK_PAPIRU || ' ';
			END IF;

			ZASTAVOVACI_PODMINKA := ZASTAVOVACI_PODMINKA + 1;
		END LOOP;
		
		RETURN RADEK_PAPIRU;
	END;
	$$ LANGUAGE plpgsql;
	
--TODO
CREATE OR REPLACE FUNCTION HERNI_CAS() RETURNS TIMESTAMP(6) AS $$
	DECLARE
	BEGIN
	END;
	$$ LANGUAGE plpgsql;
	
CREATE OR REPLACE FUNCTION REMIZA(ID_HRA INTEGER) RETURNS BOOLEAN AS $$
	DECLARE
		I_HRA HRA;
	BEGIN
		SELECT * INTO I_HRA FROM HRA WHERE ID = ID_HRA;
		IF (I_HRA.ID_STAV = 1) THEN
			RETURN TRUE;
		END IF;
		
		RETURN FALSE;
	END;
	$$ LANGUAGE plpgsql;
	
--TODO
CREATE OR REPLACE FUNCTION VYHRA() RETURNS BOOLEAN AS $$
	DECLARE
	BEGIN
	END;
	$$ LANGUAGE plpgsql;


------------------------------
-- SMAZANI TRIGGERU.
------------------------------


------------------------------
-- VYTVORENI TRIGGERU.
------------------------------


INSERT INTO HRAC VALUES (1, 'jednicka', 0, 0, 0, 0, 0, 0);
INSERT INTO HRAC VALUES (2, 'dvojka', 0, 0, 0, 0, 0, 0);
INSERT INTO HRA VALUES (1, 20, 20, 5, 4, 1, '2020-02-24 20:45:17', 2, '2020-02-24 20:45:17');

INSERT INTO TAH VALUES (1, '2020-02-24 20:45:17', 1, 1, 1, 1);
INSERT INTO TAH VALUES (2, '2020-02-24 20:45:17', 1, 2, 2, 4);
INSERT INTO TAH VALUES (3, '2020-02-24 20:45:17', 1, 2, 10, 1);
INSERT INTO TAH VALUES (4, '2020-02-24 20:45:17', 1, 1, 20, 4);