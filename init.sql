------------------------------
-- SMAZANI TABULEK.
------------------------------

DELETE FROM TAH;
DELETE FROM RADKY_HRY;
DELETE FROM HRA;
DELETE FROM OMEZENI;
DELETE FROM STAV;
DELETE FROM HRAC;

DROP TABLE TAH CASCADE;
DROP TABLE RADKY_HRY CASCADE;
DROP TABLE HRA CASCADE;
DROP TABLE OMEZENI;
DROP TABLE STAV;
DROP TABLE HRAC CASCADE;


------------------------------
-- VYTVORENI NOVYCH TABULEK.
------------------------------


CREATE TABLE OMEZENI (
	ID INTEGER NOT NULL,
	MIN_SIRKA INTEGER NOT NULL,
	MIN_VYSKA INTEGER NOT NULL,
	MIN_VELIKOST_RADY INTEGER NOT NULL,
	MAX_SIRKA INTEGER NOT NULL,
	MAX_VYSKA INTEGER NOT NULL,	
	MAX_VELIKOST_RADY INTEGER NOT NULL,
	
	PRIMARY KEY(ID) 
);

CREATE TABLE STAV (
	ID INTEGER NOT NULL,
	NAZEV VARCHAR(50),
	
	PRIMARY KEY(ID) 
);

CREATE TABLE HRAC (
	ID INTEGER NOT NULL,
	JMENO VARCHAR(255),
	TAH_PRVNI_POCET_VYHER INTEGER NOT NULL,
	TAH_PRVNI_POCET_REMIZ INTEGER NOT NULL,
	TAH_PRVNI_POCET_PROHER INTEGER NOT NULL,
	TAH_DRUHY_POCET_VYHER INTEGER NOT NULL,
	TAH_DRUHY_POCET_REMIZ INTEGER NOT NULL,
	TAH_DRUHY_POCET_PROHER INTEGER NOT NULL,
	
	PRIMARY KEY(ID) 
);

CREATE TABLE HRA (
	ID INTEGER NOT NULL,
	SIRKA INTEGER NOT NULL,
	VYSKA INTEGER NOT NULL,
	VELIKOST_RADY INTEGER NOT NULL,
	ID_STAV INTEGER NOT NULL,	
	ZACATEK_HRY TIMESTAMP(6) NOT NULL,
	ID_PRVNI_HRAC INTEGER NOT NULL,
	CAS_PRVNI_HRAC TIMESTAMP(6) NOT NULL,
	ID_DRUHY_HRAC INTEGER NOT NULL,
	CAS_DRUHY_HRAC TIMESTAMP(6) NOT NULL,
	
	PRIMARY KEY(ID),
	FOREIGN KEY(ID_STAV) REFERENCES STAV(ID),
	FOREIGN KEY(ID_PRVNI_HRAC) REFERENCES HRAC(ID),
	FOREIGN KEY(ID_DRUHY_HRAC) REFERENCES HRAC(ID)
);

CREATE TABLE TAH (
	ID INTEGER NOT NULL,
	CAS_TAHU TIMESTAMP(6) NOT NULL,
	ID_AKTUALNI_HRA INTEGER NOT NULL,
	ID_HRAJICI_HRAC INTEGER NOT NULL,
	X INTEGER NOT NULL,
	Y INTEGER NOT NULL,
	
	PRIMARY KEY(ID),
	FOREIGN KEY(ID_AKTUALNI_HRA) REFERENCES HRA(ID),
	FOREIGN KEY(ID_HRAJICI_HRAC) REFERENCES HRAC(ID)
);

CREATE TABLE RADKY_HRY (
	ID INTEGER NOT NULL,
	ID_HRA INTEGER NOT NULL,
	CISLO_RADKY INTEGER NOT NULL,
	
	PRIMARY KEY(ID),
	FOREIGN KEY(ID_HRA) REFERENCES HRA(ID)
);


------------------------------
-- ZAKLADNI DATA PRO TABULKY.
------------------------------


INSERT INTO STAV VALUES (1, 'remiza');
INSERT INTO STAV VALUES (2, 'vitezstvi zacinajiciho hrace');
INSERT INTO STAV VALUES (3, 'prohra zacinajiciho hrace');
INSERT INTO STAV VALUES (4, 'rozehrana');

INSERT INTO OMEZENI VALUES (1, 5, 5, 5, 20, 20, 15);


------------------------------
-- SMAZANI FUNKCI.
------------------------------


DROP FUNCTION SPATNY_PARAMETR(INTEGER, INTEGER, INTEGER);
DROP FUNCTION RADEK_PAPIRU(INTEGER, INTEGER) CASCADE;
DROP FUNCTION HERNI_CAS(INTEGER, INTEGER);
DROP FUNCTION REMIZA(INTEGER);
DROP FUNCTION VYHRA(INTEGER, INTEGER);

------------------------------
-- VYTVORENI FUNKCI.
------------------------------

CREATE OR REPLACE FUNCTION SPATNY_PARAMETR(POCET_RADKU INTEGER, POCET_SLOUPCU INTEGER, VELIKOST_RADY INTEGER) RETURNS INTEGER AS $$
	DECLARE		
		I_OMEZENI OMEZENI;
	BEGIN
		SELECT * INTO I_OMEZENI FROM OMEZENI;
		
		IF POCET_RADKU < I_OMEZENI.MIN_SIRKA THEN
			RETURN 1;
		END IF;
	
		IF POCET_RADKU > I_OMEZENI.MAX_SIRKA THEN
			RETURN 2;
		END IF;
	
		IF POCET_SLOUPCU < I_OMEZENI.MIN_VYSKA THEN
			RETURN 3;
		END IF;
	
		IF POCET_SLOUPCU > I_OMEZENI.MAX_VYSKA THEN
			RETURN 4;
		END IF;
	
		IF VELIKOST_RADY < I_OMEZENI.MIN_VELIKOST_RADY THEN
			RETURN 5;
		END IF;
	
		IF VELIKOST_RADY > I_OMEZENI.MAX_VELIKOST_RADY THEN
			RETURN 6;
		END IF;
	
		IF VELIKOST_RADY > POCET_RADKU THEN
			RETURN 7;
		END IF;
	
		IF VELIKOST_RADY > POCET_SLOUPCU THEN
			RETURN 8;
		END IF;
    
		RETURN 0;
	END;
	$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION RADEK_PAPIRU(ID_HRA INTEGER, RADEK_HRY INTEGER) RETURNS TEXT AS $$
	DECLARE
		I_HRA HRA;
		RADEK_PAPIRU TEXT := '';
		NAZEV_ZNACKY VARCHAR(10) := '';
		ZASTAVOVACI_PODMINKA INTEGER := 0;
		ID_HRAC_AKTUALNI INTEGER;
		ID_HRAC_PRVNI INTEGER;
	BEGIN
		SELECT * INTO I_HRA FROM HRA WHERE ID = ID_HRA;	
		SELECT ID_PRVNI_HRAC INTO ID_HRAC_PRVNI FROM HRA WHERE ID = ID_HRA;
		
		LOOP
			EXIT WHEN ZASTAVOVACI_PODMINKA = I_HRA.SIRKA;		

			SELECT ID_HRAJICI_HRAC INTO ID_HRAC_AKTUALNI FROM TAH WHERE X = ZASTAVOVACI_PODMINKA + 1 AND Y = RADEK_HRY AND ID_AKTUALNI_HRA = ID_HRA;
			
			IF ID_HRAC_AKTUALNI IS NULL THEN
				RADEK_PAPIRU := RADEK_PAPIRU || ' ';
			ELSE
				IF ID_HRAC_AKTUALNI = ID_HRAC_PRVNI THEN
					RADEK_PAPIRU := RADEK_PAPIRU || 'O';
				ELSE
					RADEK_PAPIRU := RADEK_PAPIRU || 'X';
				END IF;					
			END IF;
				
			IF ZASTAVOVACI_PODMINKA < I_HRA.SIRKA THEN
				RADEK_PAPIRU := RADEK_PAPIRU || '|';
			END IF;

			ZASTAVOVACI_PODMINKA := ZASTAVOVACI_PODMINKA + 1;
		END LOOP;
		
		RETURN RADEK_PAPIRU;
	END;
	$$ LANGUAGE plpgsql;
	
CREATE OR REPLACE FUNCTION HERNI_CAS(ID_HRA INTEGER, ID_HRAC INTEGER) RETURNS INTEGER AS $$
	DECLARE
		HRACI_CASY_PRVNI_HRAC TIMESTAMP(6)[];
		POCET_CASU_PRVNI_HRAC INTEGER;
		HRACI_CASY_DRUHY_HRAC TIMESTAMP(6)[];
		POCET_CASU_DRUHY_HRAC INTEGER;		
		VYSLEDNY_CAS INTEGER := 0;
		PRUBEZNY_CAS INTEGER := 0;
		ZASTAVOVACI_PODMINKA INTEGER := 0;
		i_HRA HRA;
	BEGIN
		SELECT * INTO I_HRA FROM HRA WHERE ID = ID_HRA;	
		
		HRACI_CASY_PRVNI_HRAC := ARRAY(SELECT CAS_TAHU FROM TAH WHERE ID_AKTUALNI_HRA = ID_HRA AND ID_HRAJICI_HRAC = ID_HRAC);
		IF ID_HRAC = I_HRA.ID_PRVNI_HRAC THEN
			HRACI_CASY_DRUHY_HRAC := ARRAY(SELECT CAS_TAHU FROM TAH WHERE ID_AKTUALNI_HRA = ID_HRA AND ID_HRAJICI_HRAC = I_HRA.ID_DRUHY_HRAC);
		ELSE
			HRACI_CASY_DRUHY_HRAC := ARRAY(SELECT CAS_TAHU FROM TAH WHERE ID_AKTUALNI_HRA = ID_HRA AND ID_HRAJICI_HRAC = I_HRA.ID_PRVNI_HRAC);
		END IF;
		
		SELECT CARDINALITY(HRACI_CASY_PRVNI_HRAC) INTO POCET_CASU_PRVNI_HRAC;
		SELECT CARDINALITY(HRACI_CASY_DRUHY_HRAC) INTO POCET_CASU_DRUHY_HRAC;
		
		LOOP
			EXIT WHEN ZASTAVOVACI_PODMINKA = POCET_CASU_PRVNI_HRAC;
			
			IF ID_HRAC = I_HRA.ID_PRVNI_HRAC THEN
				IF ZASTAVOVACI_PODMINKA = 0 THEN
					SELECT ((EXTRACT (EPOCH FROM (HRACI_CASY_PRVNI_HRAC[ZASTAVOVACI_PODMINKA + 1]::TIMESTAMP - I_HRA.ZACATEK_HRY::TIMESTAMP))))::INTEGER INTO PRUBEZNY_CAS;
					VYSLEDNY_CAS := VYSLEDNY_CAS + PRUBEZNY_CAS;
				ELSE
					IF ZASTAVOVACI_PODMINKA > POCET_CASU_DRUHY_HRAC THEN
						RETURN VYSLEDNY_CAS;
					END IF;
					
					SELECT ((EXTRACT (EPOCH FROM (HRACI_CASY_PRVNI_HRAC[ZASTAVOVACI_PODMINKA + 1]::TIMESTAMP - HRACI_CASY_DRUHY_HRAC[ZASTAVOVACI_PODMINKA]::TIMESTAMP))))::INTEGER INTO PRUBEZNY_CAS;
					
					VYSLEDNY_CAS := VYSLEDNY_CAS + PRUBEZNY_CAS;
				END IF;
			ELSE
				SELECT ((EXTRACT (EPOCH FROM (HRACI_CASY_PRVNI_HRAC[ZASTAVOVACI_PODMINKA + 1]::TIMESTAMP - HRACI_CASY_DRUHY_HRAC[ZASTAVOVACI_PODMINKA+ 1]::TIMESTAMP))))::INTEGER INTO PRUBEZNY_CAS;
				
				VYSLEDNY_CAS := VYSLEDNY_CAS + PRUBEZNY_CAS;
			END IF;
			
			ZASTAVOVACI_PODMINKA := ZASTAVOVACI_PODMINKA + 1;
		END LOOP;
		RETURN VYSLEDNY_CAS;
		
	END;
	$$ LANGUAGE plpgsql;
	
CREATE OR REPLACE FUNCTION REMIZA(ID_HRA INTEGER) RETURNS BOOLEAN AS $$
	DECLARE
		I_HRA HRA;
	BEGIN
		SELECT * INTO I_HRA FROM HRA WHERE ID = ID_HRA;
		IF (I_HRA.ID_STAV = 1) THEN
			RETURN TRUE;
		END IF;
		
		RETURN FALSE;
	END;
	$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION VYHRA(ID_HRA INTEGER, ID_AKTUALNE_HRAJICI_HRAC INTEGER) RETURNS BOOLEAN AS $$
	DECLARE
		I_HRA HRA;
		ID_HRAC_PRVNI INTEGER;
		ID_HRAC_DRUHY INTEGER;
	BEGIN
		SELECT * INTO I_HRA FROM HRA WHERE ID = ID_HRA;
		SELECT ID_PRVNI_HRAC INTO ID_HRAC_PRVNI FROM HRA WHERE ID = ID_HRA;
		SELECT ID_DRUHY_HRAC INTO ID_HRAC_DRUHY FROM HRA WHERE ID = ID_HRA;
		
		IF I_HRA.ID_STAV = 2 AND ID_HRAC_PRVNI = ID_AKTUALNE_HRAJICI_HRAC THEN
			RETURN TRUE;
		END IF;
		
		IF I_HRA.ID_STAV = 3 AND ID_HRAC_DRUHY = ID_AKTUALNE_HRAJICI_HRAC THEN
			RETURN TRUE;
		END IF;
		
		RETURN FALSE;		
	END;
	$$ LANGUAGE plpgsql;

------------------------------
-- SMAZANI TRIGGERU.
------------------------------


------------------------------
-- VYTVORENI TRIGGERU.
------------------------------


------------------------------
-- VYTVORENI POHLEDU.
------------------------------


CREATE OR REPLACE VIEW PAPIR (ID_HRA) AS
SELECT 
	ID_HRA, 
	RADEK_PAPIRU(ID_HRA, CISLO_RADKY)
FROM RADKY_HRY;

CREATE OR REPLACE VIEW VYHRY_ZACINAJICI (ID_PRVNI_HRAC) AS
SELECT 
	HRA.ID AS ID, 
	HRA.ID_PRVNI_HRAC AS ID_HRAC, 
	HRA.SIRKA, 
	HRA.VYSKA, 
	HRA.VELIKOST_RADY, 
	HERNI_CAS(HRA.ID, HRA.ID_PRVNI_HRAC) + HERNI_CAS(HRA.ID, HRA.ID_DRUHY_HRAC) AS DOBA_HRANI_HRY,
	(SELECT COUNT(*) FROM (SELECT * FROM TAH WHERE ID_AKTUALNI_HRA = HRA.ID) AS TEMP_TAHY) AS POCET_TAHU,
	H1.JMENO AS ZACINAJICI_HRAC,
	H2.JMENO AS DRUHY_HRAC,
	H1.JMENO AS VITEZ
	FROM HRA
		LEFT JOIN HRAC AS H1
		ON H1.ID = HRA.ID_PRVNI_HRAC
		LEFT JOIN HRAC AS H2
		ON H2.ID = HRA.ID_DRUHY_HRAC
	WHERE VYHRA(HRA.ID, HRA.ID_PRVNI_HRAC) = TRUE;

CREATE OR REPLACE VIEW PROHRY_ZACINAJICI (ID_PRVNI_HRAC) AS
SELECT 
	HRA.ID AS ID, 
	HRA.ID_PRVNI_HRAC AS ID_HRAC, 
	HRA.SIRKA, 
	HRA.VYSKA, 
	HRA.VELIKOST_RADY, 
	HERNI_CAS(HRA.ID, HRA.ID_PRVNI_HRAC) + HERNI_CAS(HRA.ID, HRA.ID_DRUHY_HRAC) AS DOBA_HRANI_HRY,
	(SELECT COUNT(*) FROM (SELECT * FROM TAH WHERE ID_AKTUALNI_HRA = HRA.ID) AS TEMP_TAHY) AS POCET_TAHU,
	H1.JMENO AS ZACINAJICI_HRAC,
	H2.JMENO AS DRUHY_HRAC,
	H1.JMENO AS PORAZENY
	FROM HRA
		LEFT JOIN HRAC AS H1
		ON H1.ID = HRA.ID_PRVNI_HRAC
		LEFT JOIN HRAC AS H2
		ON H2.ID = HRA.ID_DRUHY_HRAC
	WHERE VYHRA(HRA.ID, HRA.ID_PRVNI_HRAC) = FALSE AND REMIZA(HRA.ID) = FALSE;

CREATE OR REPLACE VIEW REMIZY AS
SELECT 
	HRA.ID AS ID, 
	HRA.ID_PRVNI_HRAC AS ID_HRAC, 
	HRA.SIRKA, 
	HRA.VYSKA, 
	HRA.VELIKOST_RADY, 
	HERNI_CAS(HRA.ID, HRA.ID_PRVNI_HRAC) + HERNI_CAS(HRA.ID, HRA.ID_DRUHY_HRAC) AS DOBA_HRANI_HRY,
	H1.JMENO AS ZACINAJICI_HRAC,
	H2.JMENO AS DRUHY_HRAC
	FROM HRA
		LEFT JOIN HRAC AS H1
		ON H1.ID = HRA.ID_PRVNI_HRAC
		LEFT JOIN HRAC AS H2
		ON H2.ID = HRA.ID_DRUHY_HRAC	
	WHERE REMIZA(HRA.ID);

INSERT INTO HRAC VALUES (1, 'jednicka', 0, 0, 0, 0, 0, 0);
INSERT INTO HRAC VALUES (2, 'dvojka', 0, 0, 0, 0, 0, 0);
INSERT INTO HRA VALUES (1, 20, 20, 5, 2, '2020-02-24 20:44:20', 1, '2020-02-24 20:45:17', 2, '2020-02-24 20:45:17');
INSERT INTO HRA VALUES (2, 20, 20, 5, 3, '2020-02-24 20:44:20', 2, '2020-02-24 20:45:17', 1, '2020-02-24 20:45:17');
INSERT INTO HRA VALUES (3, 20, 20, 5, 1, '2020-02-24 20:44:20', 2, '2020-02-24 20:45:17', 1, '2020-02-24 20:45:17');

INSERT INTO TAH VALUES (1, '2020-02-24 20:45:45', 1, 1, 1, 1);
INSERT INTO TAH VALUES (2, '2020-02-24 20:46:17', 1, 2, 2, 4);
INSERT INTO TAH VALUES (3, '2020-02-24 20:47:00', 1, 1, 10, 1);
INSERT INTO TAH VALUES (4, '2020-02-24 20:50:20', 1, 2, 20, 4);
INSERT INTO TAH VALUES (5, '2020-02-24 20:51:12', 1, 1, 13, 1);

INSERT INTO RADKY_HRY VALUES (1, 1, 1);
INSERT INTO RADKY_HRY VALUES (2, 1, 2);
INSERT INTO RADKY_HRY VALUES (3, 1, 3);
INSERT INTO RADKY_HRY VALUES (4, 1, 4);
INSERT INTO RADKY_HRY VALUES (5, 1, 5);
INSERT INTO RADKY_HRY VALUES (6, 1, 6);
INSERT INTO RADKY_HRY VALUES (7, 1, 7);
INSERT INTO RADKY_HRY VALUES (8, 1, 8);
INSERT INTO RADKY_HRY VALUES (9, 1, 9);
INSERT INTO RADKY_HRY VALUES (10, 1, 10);
INSERT INTO RADKY_HRY VALUES (11, 1, 11);
INSERT INTO RADKY_HRY VALUES (12, 1, 12);
INSERT INTO RADKY_HRY VALUES (13, 1, 13);
INSERT INTO RADKY_HRY VALUES (14, 1, 14);
INSERT INTO RADKY_HRY VALUES (15, 1, 15);
INSERT INTO RADKY_HRY VALUES (16, 1, 16);
INSERT INTO RADKY_HRY VALUES (17, 1, 17);
INSERT INTO RADKY_HRY VALUES (18, 1, 18);
INSERT INTO RADKY_HRY VALUES (19, 1, 19);
INSERT INTO RADKY_HRY VALUES (20, 1, 20);
INSERT INTO RADKY_HRY VALUES (21, 2, 1);